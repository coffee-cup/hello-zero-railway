/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero  ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/BriefHQ/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { default as DrizzleConfigSchema } from "../../drizzle-zero.config";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    mediums: {
      name: "mediums",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mediums"]["columns"]["id"]["customType"],
        },
        name: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["mediums"]["columns"]["name"]["customType"],
        },
      },
      primaryKey: ["id"],
      serverName: "medium",
    },
    messages: {
      name: "messages",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messages"]["columns"]["id"]["customType"],
        },
        senderId: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messages"]["columns"]["senderId"]["customType"],
        },
        mediumId: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messages"]["columns"]["mediumId"]["customType"],
        },
        body: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messages"]["columns"]["body"]["customType"],
        },
        timestamp: {
          type: "number",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messages"]["columns"]["timestamp"]["customType"],
        },
      },
      primaryKey: ["id"],
      serverName: "message",
    },
    users: {
      name: "users",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["id"]["customType"],
        },
        name: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["name"]["customType"],
        },
        partner: {
          type: "boolean",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["partner"]["customType"],
        },
      },
      primaryKey: ["id"],
      serverName: "user",
    },
  },
  relationships: {
    messages: {
      sender: [
        {
          sourceField: ["senderId"],
          destField: ["id"],
          destSchema: "users",
          cardinality: "one",
        },
      ],
      medium: [
        {
          sourceField: ["mediumId"],
          destField: ["id"],
          destSchema: "mediums",
          cardinality: "one",
        },
      ],
    },
  },
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
